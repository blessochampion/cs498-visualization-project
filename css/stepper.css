/* This is just to make things look a bit better */
body {
  font-size: 1.2em;
}

h2.subtitle {
  font-size: 0.8em;
  padding-left: 10px;
  color: #666;
}

/* Basic styling for the step links */
a.step-link {
  padding: 5px;
  background-color: #444;
  color: #666;
  text-decoration: none;
}

a.step-link:hover, a.active {
  color: #ddd;
}

#container{
  margin: auto;
  padding-top: 20px;
  width: 980px;
}

/* Here is our relatively positioned
 * container div to hold the rest of the
 * visualization */
#vis-container {
  position: relative;
  width: 980px;
  height: 800px;
  margin-top: 10px;
}

/* All the .annotation-step divs are inside
 * #annotation-steps. z-index ensures annotations
 * stay on top of visualization. */
#annotation-steps {
  position: absolute;
  z-index: 40;
}

#vis-nav {
  z-index: 20;
}

/* This is where you would create the actual visualization.
 * Right now, lets just change the background color. */
#vis-canvas {
  position: absolute;
  width: 100%;
  height: 100%;
  z-index: 10;
  overflow: hidden;
  background-color: #eee;


<script src="//d3js.org/d3.v3.min.js"></script>
		<script>

		var margin = {top: 20, right: 20, bottom: 30, left: 40},
		    width = 960 - margin.left - margin.right,
		    height = 500 - margin.top - margin.bottom;

		var x = d3.scale.linear()
		    .range([0, width]);

		var y = d3.scale.linear()
		    .range([height, 0]);

		var color = d3.scale.category10();

		var xAxis = d3.svg.axis()
		    .scale(x)
		    .orient("bottom");

		var yAxis = d3.svg.axis()
		    .scale(y)
		    .orient("left");

		var svg = d3.select("body").append("svg")
		    .attr("width", width + margin.left + margin.right)
		    .attr("height", height + margin.top + margin.bottom)
		  .append("g")
		    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

		d3.csv("https://raw.githubusercontent.com/tylerwatkins101/cs498-visualization-project/master/data/epa2015_test.csv", function(error, data) {
		  if (error) throw error;

		  data.forEach(function(d) {
		    d.mpg = +d.mpg;
		    d.horse = +d.horse;
		  });

		  x.domain(d3.extent(data, function(d) { return d.horse; })).nice();
		  y.domain(d3.extent(data, function(d) { return d.mpg; })).nice();

		  svg.append("g")
		      .attr("class", "x axis")
		      .attr("transform", "translate(0," + height + ")")
		      .call(xAxis)
		    .append("text")
		      .attr("class", "label")
		      .attr("x", width)
		      .attr("y", -6)
		      .style("text-anchor", "end")
		      .text("horsepower");

		  svg.append("g")
		      .attr("class", "y axis")
		      .call(yAxis)
		    .append("text")
		      .attr("class", "label")
		      .attr("transform", "rotate(-90)")
		      .attr("y", 6)
		      .attr("dy", ".71em")
		      .style("text-anchor", "end")
		      .text("mpg")

		  svg.selectAll(".dot")
		      .data(data)
		    .enter().append("circle")
		      .attr("class", "dot")
		      .attr("r", 3.5)
		      .attr("cx", function(d) { return x(d.horse); })
		      .attr("cy", function(d) { return y(d.mpg); })
		      .style("fill", function(d) { return color(d.type); });

		  var legend = svg.selectAll(".legend")
		      .data(color.domain())
		    .enter().append("g")
		      .attr("class", "legend")
		      .attr("transform", function(d, i) { return "translate(0," + i * 20 + ")"; });

		  legend.append("rect")
		      .attr("x", width - 18)
		      .attr("width", 18)
		      .attr("height", 18)
		      .style("fill", color);

		  legend.append("text")
		      .attr("x", width - 24)
		      .attr("y", 9)
		      .attr("dy", ".35em")
		      .style("text-anchor", "end")
		      .text(function(d) { return d; });

		});

		</script>
}

/* By default, all annotation-steps are hidden. */
.annotation-step {
  position: absolute;
  display: none;
}

/* Finally we can position each annotation exactly how
 * we want. */
.annotation {
  position: absolute;
}
 
#step1-high-annotation {
  left: 50px;
  top: 30px;
  width: 880px;
}

#step2-high-annotation {
  left: 50px;
  top: 30px;
  width: 880px;
}

#step3-high-annotation {
  left: 50px;
  top: 30px;
  width: 880px;
}



